"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[420],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),f=i,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4823:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={id:"sources.amplitudes_for_fields"},o=void 0,l={unversionedId:"API/sources.amplitudes_for_fields",id:"API/sources.amplitudes_for_fields",title:"sources.amplitudes_for_fields",description:"sources.amplitudesforfields",source:"@site/docs/API/sources.amplitudes_for_fields.md",sourceDirName:"API",slug:"/API/sources.amplitudes_for_fields",permalink:"/fmmax/API/sources.amplitudes_for_fields",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/sources.amplitudes_for_fields.md",tags:[],version:"current",frontMatter:{id:"sources.amplitudes_for_fields"},sidebar:"APISidebar",previous:{title:"scattering.stack_s_matrix",permalink:"/fmmax/API/scattering.stack_s_matrix"},next:{title:"sources.amplitudes_for_source",permalink:"/fmmax/API/sources.amplitudes_for_source"}},s={},c=[{value:"<code>sources.amplitudes_for_fields</code>",id:"sourcesamplitudes_for_fields",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"sourcesamplitudes_for_fields"},(0,i.kt)("inlineCode",{parentName:"h3"},"sources.amplitudes_for_fields")),(0,i.kt)("p",null,"Computes the amplitudes for fields."),(0,i.kt)("p",null,"The fields are expected to be given for a supercell containing one or more unit\ncells, i.e. for a calculation with in-plane wavevector generated by\n",(0,i.kt)("inlineCode",{parentName:"p"},"basis.brillouin_zone_in_plane_wavevector"),". The shape of the supercell is\ninferred from the batch shape of the ",(0,i.kt)("inlineCode",{parentName:"p"},"layer_solve_result")," and the specified\n",(0,i.kt)("inlineCode",{parentName:"p"},"brillouin_grid_axes"),"."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ex"),": The x-oriented electric field on the real-space grid, with a trailing\nbatch dimension."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ey"),": The y-oriented electric field on the real-space grid, with shape\n",(0,i.kt)("inlineCode",{parentName:"li"},"(..., nx, ny, num_fields)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"hx"),": The x-oriented magnetic field on the real-space grid."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"hy"),": The y-oriented magnetic field on the real-space grid."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"layer_solve_result"),": The eigensolve result for the layer containing the fields."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"brillouin_grid_axes"),": The batch axes corresponding to the Brillouin zone grid.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The forward and backward wave amplitudes.")))}d.isMDXComponent=!0}}]);