"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6813],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||n;return r?a.createElement(f,l(l({ref:t},p),{},{components:r})):a.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<n;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1757:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var a=r(7462),i=(r(7294),r(3905));const n={id:"fields.stack_amplitudes_interior"},l=void 0,o={unversionedId:"API/fields.stack_amplitudes_interior",id:"API/fields.stack_amplitudes_interior",title:"fields.stack_amplitudes_interior",description:"fields.stackamplitudesinterior",source:"@site/docs/API/fields.stack_amplitudes_interior.md",sourceDirName:"API",slug:"/API/fields.stack_amplitudes_interior",permalink:"/fmmax/API/fields.stack_amplitudes_interior",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fields.stack_amplitudes_interior.md",tags:[],version:"current",frontMatter:{id:"fields.stack_amplitudes_interior"},sidebar:"APISidebar",previous:{title:"fields.propagate_amplitude",permalink:"/fmmax/API/fields.propagate_amplitude"},next:{title:"fields.stack_amplitudes_interior_with_source",permalink:"/fmmax/API/fields.stack_amplitudes_interior_with_source"}},s={},c=[{value:"<code>fields.stack_amplitudes_interior</code>",id:"fieldsstack_amplitudes_interior",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],p={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"fieldsstack_amplitudes_interior"},(0,i.kt)("inlineCode",{parentName:"h3"},"fields.stack_amplitudes_interior")),(0,i.kt)("p",null,"Computes the wave amplitudes at interior layers within a stack."),(0,i.kt)("p",null,"The calculation is for a batch of amplitudes, with the batch axis being the\nfinal axis. There can also be leading batch axes. Accordingly, amplitudes\nshould have shape ",(0,i.kt)("inlineCode",{parentName:"p"},"(..., 2 * num_terms, num_amplitudes)"),". The trailing batch\ndimension is preferred because it allows matrix-matrix multiplication instead\nof batched matrix-vector multiplication."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"s_matrices_interior"),": The scattering matrices for the substacks before\nand after each layer, as computed by ",(0,i.kt)("inlineCode",{parentName:"li"},"stack_s_matrices_interior"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"forward_amplitude_0_start"),": The forward-propagating wave amplitude at the\nstart of the first layer of the stack."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"backward_amplitude_N_end"),": The backward-propagating wave amplitude at the\nend of the last layer of the stack.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The forward- and backward-propagating wave amplitude for each layer,\ndefined at the start and end of each layer, respectively.")))}u.isMDXComponent=!0}}]);