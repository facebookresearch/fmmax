"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2958],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),_=n,m=d["".concat(l,".").concat(_)]||d[_]||p[_]||o;return r?a.createElement(m,i(i({ref:t},c),{},{components:r})):a.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=_;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}_.displayName="MDXCreateElement"},591:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={id:"sources.amplitudes_for_source"},i=void 0,s={unversionedId:"API/sources.amplitudes_for_source",id:"API/sources.amplitudes_for_source",title:"sources.amplitudes_for_source",description:"sources.amplitudesforsource",source:"@site/docs/API/sources.amplitudes_for_source.md",sourceDirName:"API",slug:"/API/sources.amplitudes_for_source",permalink:"/fmmax/API/sources.amplitudes_for_source",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/sources.amplitudes_for_source.md",tags:[],version:"current",frontMatter:{id:"sources.amplitudes_for_source"},sidebar:"APISidebar",previous:{title:"sources.amplitudes_for_fields",permalink:"/fmmax/API/sources.amplitudes_for_fields"},next:{title:"sources.dirac_delta_source",permalink:"/fmmax/API/sources.dirac_delta_source"}},l={},u=[{value:"<code>sources.amplitudes_for_source</code>",id:"sourcesamplitudes_for_source",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],c={toc:u},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"sourcesamplitudes_for_source"},(0,n.kt)("inlineCode",{parentName:"h3"},"sources.amplitudes_for_source")),(0,n.kt)("p",null,"Computes wave amplitudes resulting from an internal source."),(0,n.kt)("p",null,"The configuration of the calculation is depicted below. A source is located at\nthe interface of two layers. The layer stacks before and after the source are\nnamed as such. The function computes the amplitudes of forward-going and\nbackward-going waves at various locations within the stack, also depicted below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"                        source _____\n                                    |\n     __before_______________________V___after_____________________\n\n    |             |     |           |           |     |           |\n    |   layer 0   | ... |  layer i  |   layer   | ... |  layer N  |\n    | start layer |     |           |   i + 1   |     | end layer |\n    |             |     |           |           |     |           |\n\n                         -> a_i      -> a_i+1          -> a_N\n            b_0 <-            b_i <-    b_i+1 <-\n")),(0,n.kt)("h4",{id:"args"},"Args:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"jx"),": The x-oriented dipole amplitude; must be at least rank-3 with a\ntrailing batch dimension."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"jy"),": The y-oriented dipole amplitude, with shape matching ",(0,n.kt)("inlineCode",{parentName:"li"},"jx"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"jz"),": The z-oriented dipole amplitude, with shape matching ",(0,n.kt)("inlineCode",{parentName:"li"},"jx"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s_matrix_before_source"),": The scattering matrix for the layer substack\nbefore the source, having no overlap with the after-source substack.\nScattering matrix pairs returned by ",(0,n.kt)("inlineCode",{parentName:"li"},"scattering.stack_s_matrices_interior"),"\nmay not be directly used."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s_matrix_after_source"),": The scattering matrix for the layer substack after\nthe source.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"None"),": The wave amplitudes:\nbackward_amplitude_0_end: The backward-going wave amplitude at the end\nof the first layer.\nforward_amplitude_before_start: The forward-going wave amplitude at the\nstart of the layer preceding the source.\nbackward_amplitude_before_end: The backward-going wave amplitude at the\nend of the layer preceding the source, i.e. just before the source.\nforward_amplitude_after_start: The forward-going wave amplitude at the\nstart of the layer following the source, i.e. just after the source.\nbackward_amplitude_after_end: The backward-going wave amplitude at the\nend of the layer following the source.\nforward_amplitude_N_start: The forward-going wave amplitude at the start\nof the final layer.")))}p.isMDXComponent=!0}}]);