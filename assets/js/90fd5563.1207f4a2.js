"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=i,d=c["".concat(m,".").concat(u)]||c[u]||f[u]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={id:"fmm.eigensolve_general_anisotropic_media"},o=void 0,l={unversionedId:"API/fmm.eigensolve_general_anisotropic_media",id:"API/fmm.eigensolve_general_anisotropic_media",title:"fmm.eigensolve_general_anisotropic_media",description:"fmm.eigensolvegeneralanisotropic_media",source:"@site/docs/API/fmm.eigensolve_general_anisotropic_media.md",sourceDirName:"API",slug:"/API/fmm.eigensolve_general_anisotropic_media",permalink:"/fmmax/API/fmm.eigensolve_general_anisotropic_media",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fmm.eigensolve_general_anisotropic_media.md",tags:[],version:"current",frontMatter:{id:"fmm.eigensolve_general_anisotropic_media"},sidebar:"APISidebar",previous:{title:"fmm.eigensolve_anisotropic_media",permalink:"/fmmax/API/fmm.eigensolve_anisotropic_media"},next:{title:"fmm.eigensolve_isotropic_media",permalink:"/fmmax/API/fmm.eigensolve_isotropic_media"}},m={},p=[{value:"<code>fmm.eigensolve_general_anisotropic_media</code>",id:"fmmeigensolve_general_anisotropic_media",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],s={toc:p},c="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"fmmeigensolve_general_anisotropic_media"},(0,i.kt)("inlineCode",{parentName:"h3"},"fmm.eigensolve_general_anisotropic_media")),(0,i.kt)("p",null,"Performs the eigensolve for a general anistropic layer."),(0,i.kt)("p",null,'Here, "general" refers to the fact that the layer material can be magnetic, i.e.\nthe permeability and permittivity can be specified.'),(0,i.kt)("p",null,"This function performs either a uniform-layer or patterned-layer eigensolve,\ndepending on the shape of the trailing dimensions of a given layer permittivity.\nWhen the final two dimensions have shape ",(0,i.kt)("inlineCode",{parentName:"p"},"(1, 1)"),", the layer is treated as\nuniform. Otherwise, it is patterned."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"wavelength"),": The free space wavelength of the excitation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"in_plane_wavevector"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"(kx0, ky0)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": The primitive vectors for the real-space lattice."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permittivity_xx"),": The xx-component of the permittivity tensor, with\nshape ",(0,i.kt)("inlineCode",{parentName:"li"},"(..., nx, ny)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permittivity_xy"),": The xy-component of the permittivity tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permittivity_yx"),": The yx-component of the permittivity tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permittivity_yy"),": The yy-component of the permittivity tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permittivity_zz"),": The zz-component of the permittivity tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permeability_xx"),": The xx-component of the permeability tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permeability_xy"),": The xy-component of the permeability tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permeability_yx"),": The yx-component of the permeability tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permeability_yy"),": The yy-component of the permeability tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"permeability_zz"),": The zz-component of the permeability tensor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"expansion"),": The field expansion to be used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"formulation"),": Specifies the formulation to be used, or a callable which computes\nthe tangent vector field for a custom vector FMM formulation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"vector_field_source"),": Optional array used to calculate the vector field for\nvector formulations of the FMM. If not specified, ",(0,i.kt)("inlineCode",{parentName:"li"},"(permittivity_xx +\npermittivity_yy) / 2")," is used. Ignored for the ",(0,i.kt)("inlineCode",{parentName:"li"},"FFT")," formulation. Should\nhave shape matching the permittivities and permeabilities.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"LayerSolveResult"),".")))}f.isMDXComponent=!0}}]);