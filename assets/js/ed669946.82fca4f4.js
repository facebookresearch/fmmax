"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8990],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>p});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),f=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=f(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=f(r),v=a,p=c["".concat(i,".").concat(v)]||c[v]||u[v]||l;return r?n.createElement(p,o(o({ref:t},d),{},{components:r})):n.createElement(p,o({ref:t},d))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=v;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var f=2;f<l;f++)o[f]=r[f];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},3954:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>f});var n=r(7462),a=(r(7294),r(3905));const l={id:"farfield.solid_angle_from_unflattened_transverse_wavevectors"},o=void 0,s={unversionedId:"API/farfield.solid_angle_from_unflattened_transverse_wavevectors",id:"API/farfield.solid_angle_from_unflattened_transverse_wavevectors",title:"farfield.solid_angle_from_unflattened_transverse_wavevectors",description:"farfield.solidanglefromunflattenedtransverse_wavevectors",source:"@site/docs/API/farfield.solid_angle_from_unflattened_transverse_wavevectors.md",sourceDirName:"API",slug:"/API/farfield.solid_angle_from_unflattened_transverse_wavevectors",permalink:"/fmmax/API/farfield.solid_angle_from_unflattened_transverse_wavevectors",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/farfield.solid_angle_from_unflattened_transverse_wavevectors.md",tags:[],version:"current",frontMatter:{id:"farfield.solid_angle_from_unflattened_transverse_wavevectors"},sidebar:"APISidebar",previous:{title:"farfield.integrated_flux",permalink:"/fmmax/API/farfield.integrated_flux"},next:{title:"farfield.unflatten",permalink:"/fmmax/API/farfield.unflatten"}},i={},f=[{value:"<code>farfield.solid_angle_from_unflattened_transverse_wavevectors</code>",id:"farfieldsolid_angle_from_unflattened_transverse_wavevectors",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],d={toc:f},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"farfieldsolid_angle_from_unflattened_transverse_wavevectors"},(0,a.kt)("inlineCode",{parentName:"h3"},"farfield.solid_angle_from_unflattened_transverse_wavevectors")),(0,a.kt)("p",null,"Computes the solid angle associated with each transverse wavevector."),(0,a.kt)("p",null,"The transverse wavevectors should be unflattened, i.e. the ",(0,a.kt)("inlineCode",{parentName:"p"},"-3")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"-2"),"\naxes should correspond to different points in k-space."),(0,a.kt)("h4",{id:"args"},"Args:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"transverse_wavevectors"),": The unflattened transverse wavevectors"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"wavelength"),": The free-space wavelength.")),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"None"),": The solid angle, with the shape matching the leading dimensions of\n",(0,a.kt)("inlineCode",{parentName:"li"},"transverse_wavevectors"),".")))}u.isMDXComponent=!0}}]);