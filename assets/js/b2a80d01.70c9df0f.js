"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8149],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=i,d=p["".concat(s,".").concat(u)]||p[u]||f[u]||a;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={id:"vector.tangent_field"},o=void 0,l={unversionedId:"API/vector.tangent_field",id:"API/vector.tangent_field",title:"vector.tangent_field",description:"vector.tangent_field",source:"@site/docs/API/vector.tangent_field.md",sourceDirName:"API",slug:"/API/vector.tangent_field",permalink:"/fmmax/API/vector.tangent_field",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/vector.tangent_field.md",tags:[],version:"current",frontMatter:{id:"vector.tangent_field"},sidebar:"APISidebar",previous:{title:"vector.normalized_vector_field",permalink:"/fmmax/API/vector.normalized_vector_field"},next:{title:"vector_fourier.compute_field_jones",permalink:"/fmmax/API/vector_fourier.compute_field_jones"}},s={},c=[{value:"<code>vector.tangent_field</code>",id:"vectortangent_field",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],m={toc:c},p="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"vectortangent_field"},(0,i.kt)("inlineCode",{parentName:"h3"},"vector.tangent_field")),(0,i.kt)("p",null,"Computes a real or complex tangent vector field."),(0,i.kt)("p",null,"The field is tangent to the interfaces of features in ",(0,i.kt)("inlineCode",{parentName:"p"},"arr"),", and varies smoothly\nbetween interfaces. It is obtained by optimization which minimizes a functional\nof the field which favors alignment with interfaces of features in ",(0,i.kt)("inlineCode",{parentName:"p"},"arr")," as well\nas smoothness of the field. The maximum magnitude of the computed field is ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,i.kt)("p",null,"The tangent field is complex when ",(0,i.kt)("inlineCode",{parentName:"p"},"use_jones")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"True"),", and real otherwise. Real\nfields are suitable for normalization using methods in this module. The complex\nfield obtained when ",(0,i.kt)("inlineCode",{parentName:"p"},"use_jones")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"True")," requires no normalization."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"arr"),": The array for which the tangent field is sought."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"use_jones"),": Specifies whether a complex Jones field or a real tangent vector\nfield is sought."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"optimizer"),": The optimizer used to minimize the functional."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"alignment_weight"),": The weight of an alignment term in the functional. Larger\nvalues will reward alignment with interfaces of features in ",(0,i.kt)("inlineCode",{parentName:"li"},"arr"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"smoothness_weight"),": The weight of a smoothness term in the functional. Larger\nvalues will reward a smoother tangent field."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"steps_dim_multiple"),": Controls the number of steps in the optimization. The\nnumber of steps is the product of ",(0,i.kt)("inlineCode",{parentName:"li"},"steps_dim_multiple")," and the dimension\nof the largest of the two trailing axes of ",(0,i.kt)("inlineCode",{parentName:"li"},"arr"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"smoothing_kernel"),": Kernel used to smooth ",(0,i.kt)("inlineCode",{parentName:"li"},"arr")," prior to the computation.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The tangent vector fields, ",(0,i.kt)("inlineCode",{parentName:"li"},"(tx, ty)"),".")))}f.isMDXComponent=!0}}]);