"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1312],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=i.createContext({}),s=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),c=s(r),f=n,d=c["".concat(p,".").concat(f)]||c[f]||u[f]||a;return r?i.createElement(d,o(o({ref:t},l),{},{components:r})):i.createElement(d,o({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=f;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[c]="string"==typeof e?e:n,o[1]=m;for(var s=2;s<a;s++)o[s]=r[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3706:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>m,toc:()=>s});var i=r(7462),n=(r(7294),r(3905));const a={id:"fmm.fourier_matrices_patterned_anisotropic_media"},o=void 0,m={unversionedId:"API/fmm.fourier_matrices_patterned_anisotropic_media",id:"API/fmm.fourier_matrices_patterned_anisotropic_media",title:"fmm.fourier_matrices_patterned_anisotropic_media",description:"fmm.fouriermatricespatternedanisotropicmedia",source:"@site/docs/API/fmm.fourier_matrices_patterned_anisotropic_media.md",sourceDirName:"API",slug:"/API/fmm.fourier_matrices_patterned_anisotropic_media",permalink:"/fmmax/API/fmm.fourier_matrices_patterned_anisotropic_media",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fmm.fourier_matrices_patterned_anisotropic_media.md",tags:[],version:"current",frontMatter:{id:"fmm.fourier_matrices_patterned_anisotropic_media"},sidebar:"APISidebar",previous:{title:"fmm.eigensolve_isotropic_media",permalink:"/fmmax/API/fmm.eigensolve_isotropic_media"},next:{title:"fmm.fourier_matrices_patterned_isotropic_media",permalink:"/fmmax/API/fmm.fourier_matrices_patterned_isotropic_media"}},p={},s=[{value:"<code>fmm.fourier_matrices_patterned_anisotropic_media</code>",id:"fmmfourier_matrices_patterned_anisotropic_media",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],l={toc:s},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"fmmfourier_matrices_patterned_anisotropic_media"},(0,n.kt)("inlineCode",{parentName:"h3"},"fmm.fourier_matrices_patterned_anisotropic_media")),(0,n.kt)("p",null,"Return Fourier convolution matrices for patterned anisotropic media."),(0,n.kt)("p",null,"The transverse permittivity matrix E is defined as,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"[-Dy, Dx]^T = E [-Ey, Ex]^T\n")),(0,n.kt)("p",null,"while the transverse permeability matrix M is defined as,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"[Bx, By]^T = M [Hx, Hy]^T\n")),(0,n.kt)("p",null,"The Fourier factorization is done as for E1 given in equation 47 of ","[2012 Liu]","."),(0,n.kt)("h4",{id:"args"},"Args:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": The primitive vectors for the real-space lattice."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"permittivities"),": The elements of the permittivity tensor: ",(0,n.kt)("inlineCode",{parentName:"li"},"(eps_xx, eps_xy,\neps_yx, eps_yy, eps_zz)"),", each having shape ",(0,n.kt)("inlineCode",{parentName:"li"},"(..., nx, ny)"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"permeabilities"),": The elements of the permeability tensor: ",(0,n.kt)("inlineCode",{parentName:"li"},"(mu_xx, mu_xy,\nmu_yx, mu_yy, mu_zz)"),", each having shape ",(0,n.kt)("inlineCode",{parentName:"li"},"(..., nx, ny)"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"expansion"),": The field expansion to be used."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"formulation"),": Specifies the formulation to be used."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"vector_field_source"),": Array used to calculate the vector field, with shape\nmatching the permittivities and permeabilities.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"inverse_z_permittivity_matrix"),": The Fourier convolution matrix for the inverse\nof the z-component of the permittivity.\nz_permittivity_matrix: The Fourier convolution matrix for the z-component\nof the permittivity.\ntransverse_permittivity_matrix: The transverse permittivity matrix from\nequation 15 of ","[2012 Liu]",", computed in the manner prescribed by\n",(0,n.kt)("inlineCode",{parentName:"li"},"fmm_formulation"),".\ninverse_z_permeability_matrix: The Fourier convolution matrix for the inverse\nof the z-component of the permeability.\nz_permeability_matrix: The Fourier convolution matrix for the z-component\nof the permeability.\ntransverse_permeability_matrix: The transverse permittivity matrix.\ntangent_vector_field: The tangent vector field ",(0,n.kt)("inlineCode",{parentName:"li"},"(tx, ty)")," used to compute the\ntransverse permittivity matrix, if a vector FMM formulation is used. If\nthe ",(0,n.kt)("inlineCode",{parentName:"li"},"FFT")," formulation is used, the vector field is ",(0,n.kt)("inlineCode",{parentName:"li"},"None"),".")))}u.isMDXComponent=!0}}]);