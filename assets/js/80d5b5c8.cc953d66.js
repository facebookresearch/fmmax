"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7372],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>_});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},b=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),b=i,_=u["".concat(s,".").concat(b)]||u[b]||v[b]||a;return r?t.createElement(_,o(o({ref:n},p),{},{components:r})):t.createElement(_,o({ref:n},p))}));function _(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=b;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}b.displayName="MDXCreateElement"},5391:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>v,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(7462),i=(r(7294),r(3905));const a={id:"basis.brillouin_zone_in_plane_wavevector"},o=void 0,l={unversionedId:"API/basis.brillouin_zone_in_plane_wavevector",id:"API/basis.brillouin_zone_in_plane_wavevector",title:"basis.brillouin_zone_in_plane_wavevector",description:"basis.brillouinzoneinplanewavevector",source:"@site/docs/API/basis.brillouin_zone_in_plane_wavevector.md",sourceDirName:"API",slug:"/API/basis.brillouin_zone_in_plane_wavevector",permalink:"/fmmax/API/basis.brillouin_zone_in_plane_wavevector",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/basis.brillouin_zone_in_plane_wavevector.md",tags:[],version:"current",frontMatter:{id:"basis.brillouin_zone_in_plane_wavevector"},sidebar:"APISidebar",previous:{title:"basis.Truncation",permalink:"/fmmax/API/basis.Truncation"},next:{title:"basis.generate_expansion",permalink:"/fmmax/API/basis.generate_expansion"}},s={},c=[{value:"<code>basis.brillouin_zone_in_plane_wavevector</code>",id:"basisbrillouin_zone_in_plane_wavevector",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],p={toc:c},u="wrapper";function v(e){let{components:n,...r}=e;return(0,i.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"basisbrillouin_zone_in_plane_wavevector"},(0,i.kt)("inlineCode",{parentName:"h3"},"basis.brillouin_zone_in_plane_wavevector")),(0,i.kt)("p",null,"Computes in-plane wavevectors on a regular grid in the first Brillouin zone."),(0,i.kt)("p",null,"The wavevectors are found by dividing the Brillouin zone into a grid with the\nspecified shape; the wavevectors are at the centers of the grid voxels."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"brillouin_grid_shape"),": The shape of the wavevector grid."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": The primitive vectors for the real-space lattice.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The in-plane wavevectors, with shape ",(0,i.kt)("inlineCode",{parentName:"li"},"brillouin_grid_shape + (2,)"),".")))}v.isMDXComponent=!0}}]);