"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8889],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=d(r),u=i,f=s["".concat(c,".").concat(u)]||s[u]||p[u]||o;return r?n.createElement(f,a(a({ref:t},m),{},{components:r})):n.createElement(f,a({ref:t},m))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},754:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const o={id:"vector.normalized_vector_field"},a=void 0,l={unversionedId:"API/vector.normalized_vector_field",id:"API/vector.normalized_vector_field",title:"vector.normalized_vector_field",description:"vector.normalizedvectorfield",source:"@site/docs/API/vector.normalized_vector_field.md",sourceDirName:"API",slug:"/API/vector.normalized_vector_field",permalink:"/fmmax/API/vector.normalized_vector_field",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/vector.normalized_vector_field.md",tags:[],version:"current",frontMatter:{id:"vector.normalized_vector_field"},sidebar:"APISidebar",previous:{title:"vector.normalize_pol",permalink:"/fmmax/API/vector.normalize_pol"},next:{title:"vector.tangent_field",permalink:"/fmmax/API/vector.tangent_field"}},c={},d=[{value:"<code>vector.normalized_vector_field</code>",id:"vectornormalized_vector_field",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],m={toc:d},s="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(s,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"vectornormalized_vector_field"},(0,i.kt)("inlineCode",{parentName:"h3"},"vector.normalized_vector_field")),(0,i.kt)("p",null,"Generates a normalized tangent vector field according to the specified method."),(0,i.kt)("p",null,"Some ",(0,i.kt)("inlineCode",{parentName:"p"},"vector_fn")," can be computationally expensive, and so this function\nresizes the input ",(0,i.kt)("inlineCode",{parentName:"p"},"arr")," so that the maximum size of the two trailing\ndimensions is ",(0,i.kt)("inlineCode",{parentName:"p"},"resize_max_dim"),". When ",(0,i.kt)("inlineCode",{parentName:"p"},"arr")," is smaller than the maximum\nsize, no resampling is performed."),(0,i.kt)("p",null,"The tangent fields are then computed for this resized array, and then\nresized again to obtain fields at the original resolution."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"arr"),": The array for which the tangent vector field is sought."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"expansion"),": The Fourier expansion for which the field is to be optimized."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": Define the unit cell coordinates."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"vector_fn"),": Function used to generate the vector field."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"normalize_fn"),": Function used to normalize the vector field."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"resize_max_dim"),": Determines the size of the array for which the tangent\nvector field is computed; ",(0,i.kt)("inlineCode",{parentName:"li"},"arr")," is resized so that it has a maximum\nsize of ",(0,i.kt)("inlineCode",{parentName:"li"},"vector_arr_size")," along any dimension."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"resize_method"),": Method used in scaling ",(0,i.kt)("inlineCode",{parentName:"li"},"arr")," prior to calculating the\ntangent vector field.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The normalized vector field.")))}p.isMDXComponent=!0}}]);