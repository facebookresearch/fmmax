"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5929],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(r),f=n,m=p["".concat(s,".").concat(f)]||p[f]||u[f]||l;return r?a.createElement(m,o(o({ref:t},d),{},{components:r})):a.createElement(m,o({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6467:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const l={id:"fields.colocate_amplitudes"},o=void 0,i={unversionedId:"API/fields.colocate_amplitudes",id:"API/fields.colocate_amplitudes",title:"fields.colocate_amplitudes",description:"fields.colocate_amplitudes",source:"@site/docs/API/fields.colocate_amplitudes.md",sourceDirName:"API",slug:"/API/fields.colocate_amplitudes",permalink:"/fmmax/API/fields.colocate_amplitudes",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fields.colocate_amplitudes.md",tags:[],version:"current",frontMatter:{id:"fields.colocate_amplitudes"},sidebar:"APISidebar",previous:{title:"fields.amplitudes_interior",permalink:"/fmmax/API/fields.amplitudes_interior"},next:{title:"fields.directional_poynting_flux",permalink:"/fmmax/API/fields.directional_poynting_flux"}},s={},c=[{value:"<code>fields.colocate_amplitudes</code>",id:"fieldscolocate_amplitudes",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],d={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"fieldscolocate_amplitudes"},(0,n.kt)("inlineCode",{parentName:"h3"},"fields.colocate_amplitudes")),(0,n.kt)("p",null,"Compute the forward- and backward-propagating wave amplitudes at ",(0,n.kt)("inlineCode",{parentName:"p"},"z_offset"),"."),(0,n.kt)("p",null,"The calculation is for a batch of amplitudes, with the batch dimension being\nfinal dimension."),(0,n.kt)("h4",{id:"args"},"Args:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"forward_amplitude_start"),": The amplitude of the forward eigenmodes at the\nstart of the layer, with a trailing batch dimension."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"backward_amplitude_end"),": The amplitude of the backward eigenmodes at the\nend of the layer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"z_offset"),": The location where the colocated amplitudes are sought, as an\noffset from the start of the layer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"layer_solve_result"),": The result of the layer eigensolve."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"layer_thickness"),": The thickness of the layer.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"None"),": The forward- and backward-propagating wave amplitudes at ",(0,n.kt)("inlineCode",{parentName:"li"},"z"),".")))}u.isMDXComponent=!0}}]);