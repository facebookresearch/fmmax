"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4457],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),f=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=f(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=f(t),c=a,m=p["".concat(u,".").concat(c)]||p[c]||d[c]||i;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var f=2;f<i;f++)l[f]=t[f];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},2771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>f});var r=t(7462),a=(t(7294),t(3905));const i={id:"farfield.unflatten"},l=void 0,o={unversionedId:"API/farfield.unflatten",id:"API/farfield.unflatten",title:"farfield.unflatten",description:"farfield.unflatten",source:"@site/docs/API/farfield.unflatten.md",sourceDirName:"API",slug:"/API/farfield.unflatten",permalink:"/fmmax/API/farfield.unflatten",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/farfield.unflatten.md",tags:[],version:"current",frontMatter:{id:"farfield.unflatten"},sidebar:"APISidebar",previous:{title:"farfield.solid_angle_from_unflattened_transverse_wavevectors",permalink:"/fmmax/API/farfield.solid_angle_from_unflattened_transverse_wavevectors"},next:{title:"farfield.unflatten_flux",permalink:"/fmmax/API/farfield.unflatten_flux"}},u={},f=[{value:"<code>farfield.unflatten</code>",id:"farfieldunflatten",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],s={toc:f},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"farfieldunflatten"},(0,a.kt)("inlineCode",{parentName:"h3"},"farfield.unflatten")),(0,a.kt)("p",null,"Unflattens an array for a given expansion and Brillouin integration scheme."),(0,a.kt)("p",null,"The returned array combines the values associated with all terms in the\nFourier expansion at all points in the Brillouin zone grid in a single\narray with trailing axes havving shape ",(0,a.kt)("inlineCode",{parentName:"p"},"(num_kx, num_ky)"),". Elements in the\noutput which have no corresponding elements in ",(0,a.kt)("inlineCode",{parentName:"p"},"flat")," are given a value\nof ",(0,a.kt)("inlineCode",{parentName:"p"},"nan"),"."),(0,a.kt)("p",null,"The flat array should have shape ",(0,a.kt)("inlineCode",{parentName:"p"},"(..., num_bz_kx, num_bz_ky, num_terms)"),",\nwhere ",(0,a.kt)("inlineCode",{parentName:"p"},"num_terms")," is the number of terms in the Fourier expansion, and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"-3")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"-2")," axes are for the Brillouin zone grid, as used e.g. with\nBrillouin zone integration to model localized sources."),(0,a.kt)("p",null,"This function assumes that the Brillouin zone is sampled on a regular grid,\nas produced by ",(0,a.kt)("inlineCode",{parentName:"p"},"basis.brillouin_zone_in_plane_wavevector"),"."),(0,a.kt)("h4",{id:"args"},"Args:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"flat"),": The flat array, with shape  ",(0,a.kt)("inlineCode",{parentName:"li"},"(..., num_bz_kx, num_bz_ky, num_terms)"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"expansion"),": The expansion used for the array.")),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"None"),": The unflattened array, with shape ",(0,a.kt)("inlineCode",{parentName:"li"},"(batch_shape, num_kx, num_ky)"),".")))}d.isMDXComponent=!0}}]);