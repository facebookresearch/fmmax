"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8235],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,u=d["".concat(o,".").concat(m)]||d[m]||g[m]||i;return r?a.createElement(u,l(l({ref:t},p),{},{components:r})):a.createElement(u,l({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<i;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const i={id:"scattering.ScatteringMatrix"},l=void 0,s={unversionedId:"API/scattering.ScatteringMatrix",id:"API/scattering.ScatteringMatrix",title:"scattering.ScatteringMatrix",description:"Class scattering.ScatteringMatrix():",source:"@site/docs/API/scattering.ScatteringMatrix.md",sourceDirName:"API",slug:"/API/scattering.ScatteringMatrix",permalink:"/fmmax/API/scattering.ScatteringMatrix",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/scattering.ScatteringMatrix.md",tags:[],version:"current",frontMatter:{id:"scattering.ScatteringMatrix"},sidebar:"APISidebar",previous:{title:"pml.apply_uniaxial_pml",permalink:"/fmmax/API/pml.apply_uniaxial_pml"},next:{title:"scattering.append_layer",permalink:"/fmmax/API/scattering.append_layer"}},o={},c=[{value:"<code>Class scattering.ScatteringMatrix():</code>",id:"class-scatteringscatteringmatrix",level:3},{value:"Args:",id:"args",level:4}],p={toc:c},d="wrapper";function g(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"class-scatteringscatteringmatrix"},(0,n.kt)("inlineCode",{parentName:"h3"},"Class scattering.ScatteringMatrix():")),(0,n.kt)("p",null,"Stores the scattering matrix for a stack of layers."),(0,n.kt)("p",null,'The first layer in a stack is the "start" layer, and the last layer in the\nstack is the "end" layer.'),(0,n.kt)("p",null,"The scattering matrix relates the forward-going and backward-going waves\non the two sides of a layer stack, which are labeled ",(0,n.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"b")," respectively."),(0,n.kt)("p",null,"Note that forward going fields are defined at the ",(0,n.kt)("em",{parentName:"p"},"start")," of a layer while\nbackward-going fields are defined at the ",(0,n.kt)("em",{parentName:"p"},"end")," of a layer, as depicted below.\nThis is discussed near equation 4.1 in ","[1999 Whittaker]","."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"        |             |           |         |           |\n        |   layer 0   |  layer 1  |   ...   |  layer N  |\n        | start layer |           |         | end layer |\n        |             |           |         |           |\n         -> a_0                              -> a_N\n                b_0 <-                            b_N <-\n")),(0,n.kt)("p",null,"Following the convention of ","[1999 Whittaker]",", the terms a_N and b_0 are\nobtained from,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"            a_N = s11 @ a_0 + s12 @ b_N\n            b_0 = s21 @ a_0 + s22 @ b_N\n")),(0,n.kt)("p",null,"Besides the actual scattering matrix element, the ",(0,n.kt)("inlineCode",{parentName:"p"},"ScatteringMatrix")," stores\ninformation about the start and end layers, which are needed to extend the\nscattering matrix to include more layers."),(0,n.kt)("h4",{id:"args"},"Args:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s11"),": Relates forward-going fields at start to forward-going fields at end."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s12"),": Relates backward-going fields at end to forward-going fields at end."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s21"),": Relates forward-going fields at start to backward-going fields at start."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"s22"),": Relates backward-going fields at end to backward-going fields at start."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"start_layer_solve_result"),": The eigensolve result for the start layer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"start_layer_thickness"),": The start layer thickness."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"end_layer_solve_result"),": The eigensolve result for the end layer."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"end_layer_thickness"),": The end layer thickness.")))}g.isMDXComponent=!0}}]);