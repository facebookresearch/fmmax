"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6994],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),p=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),l=p(r),f=n,d=l["".concat(c,".").concat(f)]||l[f]||u[f]||o;return r?i.createElement(d,a(a({ref:t},s),{},{components:r})):i.createElement(d,a({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=f;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m[l]="string"==typeof e?e:n,a[1]=m;for(var p=2;p<o;p++)a[p]=r[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4629:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var i=r(7462),n=(r(7294),r(3905));const o={id:"fmm.fourier_matrices_patterned_isotropic_media"},a=void 0,m={unversionedId:"API/fmm.fourier_matrices_patterned_isotropic_media",id:"API/fmm.fourier_matrices_patterned_isotropic_media",title:"fmm.fourier_matrices_patterned_isotropic_media",description:"fmm.fouriermatricespatternedisotropicmedia",source:"@site/docs/API/fmm.fourier_matrices_patterned_isotropic_media.md",sourceDirName:"API",slug:"/API/fmm.fourier_matrices_patterned_isotropic_media",permalink:"/fmmax/API/fmm.fourier_matrices_patterned_isotropic_media",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fmm.fourier_matrices_patterned_isotropic_media.md",tags:[],version:"current",frontMatter:{id:"fmm.fourier_matrices_patterned_isotropic_media"},sidebar:"APISidebar",previous:{title:"fmm.fourier_matrices_patterned_anisotropic_media",permalink:"/fmmax/API/fmm.fourier_matrices_patterned_anisotropic_media"},next:{title:"fmm_matrices.k_matrix_patterned",permalink:"/fmmax/API/fmm_matrices.k_matrix_patterned"}},c={},p=[{value:"<code>fmm.fourier_matrices_patterned_isotropic_media</code>",id:"fmmfourier_matrices_patterned_isotropic_media",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],s={toc:p},l="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,i.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"fmmfourier_matrices_patterned_isotropic_media"},(0,n.kt)("inlineCode",{parentName:"h3"},"fmm.fourier_matrices_patterned_isotropic_media")),(0,n.kt)("p",null,"Return Fourier convolution matrices for patterned nonmagnetic isotropic media."),(0,n.kt)("p",null,"All matrices are forms of the Fourier convolution matrices defined in equation\n8 of ","[2012 Liu]",". For vector formulations, the transverse permittivity matrix is\nof the form E2 given in equation 51 of ","[2012 Liu]","."),(0,n.kt)("h4",{id:"args"},"Args:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": The primitive vectors for the real-space lattice."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"permittivity"),": The permittivity array, with shape ",(0,n.kt)("inlineCode",{parentName:"li"},"(..., nx, ny)"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"expansion"),": The field expansion to be used."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"formulation"),": Specifies the formulation to be used, or a callable which computes\nthe tangent vector field for a custom vector FMM formulation.")),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"inverse_z_permittivity_matrix"),": The Fourier convolution matrix for the inverse\nof the z-component of the permittivity.\nz_permittivity_matrix: The Fourier convolution matrix for the z-component\nof the permittivity.\ntransverse_permittivity_matrix: The transverse permittivity matrix.\ntangent_vector_field: The tangent vector field ",(0,n.kt)("inlineCode",{parentName:"li"},"(tx, ty)")," used to compute the\ntransverse permittivity matrix, if a vector FMM formulation is used. If\nthe ",(0,n.kt)("inlineCode",{parentName:"li"},"FFT")," formulation is used, the vector field is ",(0,n.kt)("inlineCode",{parentName:"li"},"None"),".")))}u.isMDXComponent=!0}}]);