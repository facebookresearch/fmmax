"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2059],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),p=i,m=u["".concat(d,".").concat(p)]||u[p]||f[p]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4412:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={id:"fields.directional_poynting_flux"},a=void 0,l={unversionedId:"API/fields.directional_poynting_flux",id:"API/fields.directional_poynting_flux",title:"fields.directional_poynting_flux",description:"fields.directionalpoyntingflux",source:"@site/docs/API/fields.directional_poynting_flux.md",sourceDirName:"API",slug:"/API/fields.directional_poynting_flux",permalink:"/fmmax/API/fields.directional_poynting_flux",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/fields.directional_poynting_flux.md",tags:[],version:"current",frontMatter:{id:"fields.directional_poynting_flux"},sidebar:"APISidebar",previous:{title:"fields.colocate_amplitudes",permalink:"/fmmax/API/fields.colocate_amplitudes"},next:{title:"fields.eigenmode_poynting_flux",permalink:"/fmmax/API/fields.eigenmode_poynting_flux"}},d={},s=[{value:"<code>fields.directional_poynting_flux</code>",id:"fieldsdirectional_poynting_flux",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],c={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"fieldsdirectional_poynting_flux"},(0,i.kt)("inlineCode",{parentName:"h3"},"fields.directional_poynting_flux")),(0,i.kt)("p",null,"Returns total forward and backward Poynting flux."),(0,i.kt)("p",null,"This function decomposes the total field into components resulting from the\nthe eigenmodes with positive and negative Poynting flux, and returns the\ntime-average flux in each order for these two components. The calculation\nfollows section 5.1 of ","[2012 Liu]","."),(0,i.kt)("p",null,"In the general case, a forward eigenmode may actually have negative\nPoynting flux, and so e.g. it may occur that a one-hot forward amplitude\nvector yields zero forward flux and nonzero backward flux."),(0,i.kt)("p",null,"If the flux associated with the forward and backward eigenmodes is desired,\n",(0,i.kt)("inlineCode",{parentName:"p"},"amplitude_poynting_flux")," should be used instead. This function serves the\nmore typical case where the total forward flux and total backward flux is\ndesired."),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"forward_amplitude"),": The amplitude of the forward eigenmodes, with a\ntrailing batch dimension."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"backward_amplitude"),": The amplitude of the backward eigenmodes, at the\nsame location in space as the ",(0,i.kt)("inlineCode",{parentName:"li"},"forward_amplitude"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"layer_solve_result"),": The results of the layer eigensolve.")),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"None"),": The Poynting flux associated with the forward and backward eigenmodes.")))}f.isMDXComponent=!0}}]);