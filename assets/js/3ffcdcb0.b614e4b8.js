"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7985],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var f=n.createContext({}),p=function(e){var r=n.useContext(f),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(f.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,f=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),s=a,m=u["".concat(f,".").concat(s)]||u[s]||d[s]||i;return t?n.createElement(m,l(l({ref:r},c),{},{components:t})):n.createElement(m,l({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=s;var o={};for(var f in r)hasOwnProperty.call(r,f)&&(o[f]=r[f]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9155:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>f,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const i={id:"farfield.farfield_profile"},l=void 0,o={unversionedId:"API/farfield.farfield_profile",id:"API/farfield.farfield_profile",title:"farfield.farfield_profile",description:"farfield.farfield_profile",source:"@site/docs/API/farfield.farfield_profile.md",sourceDirName:"API",slug:"/API/farfield.farfield_profile",permalink:"/fmmax/API/farfield.farfield_profile",draft:!1,editUrl:"https://github.com/facebookresearch/fmmax/docs/API/farfield.farfield_profile.md",tags:[],version:"current",frontMatter:{id:"farfield.farfield_profile"},sidebar:"APISidebar",previous:{title:"farfield.angles_from_unflattened_transverse_wavevectors",permalink:"/fmmax/API/farfield.angles_from_unflattened_transverse_wavevectors"},next:{title:"farfield.integrated_flux",permalink:"/fmmax/API/farfield.integrated_flux"}},f={},p=[{value:"<code>farfield.farfield_profile</code>",id:"farfieldfarfield_profile",level:3},{value:"Args:",id:"args",level:4},{value:"Returns:",id:"returns",level:4}],c={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"farfieldfarfield_profile"},(0,a.kt)("inlineCode",{parentName:"h3"},"farfield.farfield_profile")),(0,a.kt)("p",null,"Computes a farfield profile."),(0,a.kt)("p",null,'This function effectively "unstacks" the values for each Fourier order and\nfor each point in the Brillouin zone sampling scheme.'),(0,a.kt)("h4",{id:"args"},"Args:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"flux"),": The flux array, with shape ",(0,a.kt)("inlineCode",{parentName:"li"},"(..., num_bz_kx, num_bz_ky, ...\n2 * num_terms, num_sources)"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"wavelength"),": The wavelength, batch-compatible with ",(0,a.kt)("inlineCode",{parentName:"li"},"flux"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"in_plane_wavevector"),": The in-plane wavevector for the zeroth Fourier\norder, batch-compatible with ",(0,a.kt)("inlineCode",{parentName:"li"},"flux"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"primitive_lattice_vectors"),": The primitive lattice vectors of the unit cell."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"expansion"),": The expansion used for the fields."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"brillouin_grid_axes"),": Specifies the two axes of ",(0,a.kt)("inlineCode",{parentName:"li"},"flux")," corresponding to\nthe Brillouin zone grid.")),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"None"),": The polar and azimuthal angles, solid angle associated with each value,\nand the farfield power.")))}d.isMDXComponent=!0}}]);